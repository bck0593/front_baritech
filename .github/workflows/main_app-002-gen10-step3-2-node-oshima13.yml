# DogMATEs Azure App Service デプロイワークフロー - Flat Standalone方式
# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - app-002-gen10-step3-2-node-oshima13

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: app-002-gen10
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_USE_MOCK_DATA: false

      - name: Prepare flat standalone artifact for Azure
        run: |
          echo "🚀 Preparing flat standalone deployment for Azure App Service..."
          rm -rf out_zip && mkdir -p out_zip
          
          # 肝：standalone の中身をルート直下に展開
          echo "📦 Copying standalone content to root..."
          cp -r .next/standalone/* out_zip/
          
          # 静的ファイルを正しいパスに配置
          echo "📁 Setting up static files..."
          mkdir -p out_zip/.next
          cp -r .next/static out_zip/.next/static
          
          # publicディレクトリもコピー
          echo "🌐 Copying public assets..."
          cp -r public out_zip/public || true
          
          # 環境設定ファイル
          echo "⚙️ Copying environment config..."
          [ -f .env.production ] && cp .env.production out_zip/.env.production || true
          
          # カスタムserver.jsを上書き（Azure最適化版）
          echo "� Deploying Azure-optimized server.js..."
          cp server.js out_zip/server.js
          
          # web.configも追加（Azure App Service用）
          echo "🌐 Adding web.config for Azure..."
          cp web.config out_zip/web.config
          
          echo "✅ Flat standalone artifact prepared successfully"
          echo "📋 Contents check:"
          ls -la out_zip/
          echo "📋 Node modules check:"
          ls -la out_zip/node_modules/ | head -10
          echo "📋 Next.js check:"
          ls -la out_zip/node_modules/next/ | head -5

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: out_zip/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Wait for previous deployment to complete
        run: |
          echo "Waiting 30 seconds to ensure previous deployment is complete..."
          sleep 30

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'app-002-gen10-step3-2-node-oshima13'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_APP_002_GEN10_STEP3_2_NODE_OSHIMA13 }}
          package: .
        env:
          WEBSITE_NODE_DEFAULT_VERSION: "20-lts"
          SCM_DO_BUILD_DURING_DEPLOYMENT: false